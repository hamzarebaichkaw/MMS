security:
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt
        Symfony\Component\Security\Core\User\User: plaintext
        Aimeos\ShopBundle\Entity\User:
            algorithm: sha1
            encode_as_base64: false
            iterations: 1

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username
        admin:
            memory:
                users:
                    admin: { password: secret, roles: [ 'ROLE_ADMIN' ] }
        aimeos_customer:
            entity: { class: AimeosShopBundle:User, property: username }
        in_memory:
            memory: ~

    firewalls:
        aimeos_admin:
            pattern:   ^/(admin|extadm|jqadm|jsonadm)
            anonymous: ~
            provider: admin
            form_login:
                login_path: /admin
                check_path: /admin_check
        aimeos_myaccount:
            pattern: ^/myaccount
            provider: aimeos_customer
            http_basic:
                realm: "MyAccount"
        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager
                # if you are using Symfony < 2.8, use the following config instead:
                # csrf_provider: form.csrf_provider

            logout:       true
            anonymous:    true

    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }
        - { path: ^/(extadm|jqadm|jsonadm), roles: ROLE_ADMIN }
        - { path: ^/myaccount, roles: ROLE_USER }